package com.aurionpro.behavioural.observer.model;

import java.util.List;

import com.aurionpro.behavioural.observer.exception.InsufficantBalance;
import com.aurionpro.behavioural.observer.exception.InvalidAmountException;

public class Account {
	private Integer accountNumber;
	private String name;
	private Double balance;
	private List<INotifier> notifiers;
	public Account(Integer accountNumber, String name, Double balance, List<INotifier> notifiers) {
		super();
		this.accountNumber = accountNumber;
		this.name = name;
		this.balance = balance;
		this.notifiers = notifiers;
	}
	public Integer getAccountNumber() {
		return accountNumber;
	}
	public void setAccountNumber(Integer accountNumber) {
		this.accountNumber = accountNumber;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public Double getBalance() {
		return balance;
	}
	public void setBalance(Double balance) {
		this.balance = balance;
	}
	public List<INotifier> getNotifiers() {
		return notifiers;
	}
	public void setNotifiers(List<INotifier> notifiers) {
		this.notifiers = notifiers;
	}
	
	public void debit(Double amount) {
		if(amount<=0) 
			throw new InvalidAmountException();
		if(balance<amount)
			throw new InsufficantBalance();
		balance -= amount;
	}
	
	public void credit(Double amount) {
		if(amount<=0) 
			throw new InvalidAmountException();
		balance += amount;
	}
	
	public void registerNotifiers(INotifier notifier) {
		notifiers.addAll(notifiers);
	}
}
